<Window x:Class="LGSTrayBattery.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LGSTrayBattery"
        mc:Ignorable="d"
        Visibility="Hidden"
        ShowInTaskbar="False"
        ResizeMode="NoResize"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        Title="MainWindow" Height="0" Width="0">
    <Window.Resources>
        <local:BatteryToIcoConverter x:Key="BatteryToIcoConverter" />
    </Window.Resources>
    <Grid>

        <!--
      in order to create a NotifyIcon, all you need is the
      namespace declaration (see above on line 4) and a simple
      declaration
    -->
        <tb:TaskbarIcon
            x:Name="TaskbarIcon"
            IconSource="{Binding SelectedDevice.BatteryPercentage, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BatteryToIcoConverter}}"
            TrayMouseDoubleClick="TaskbarIcon_OnTrayMouseDoubleClick"
            ToolTipText="{Binding SelectedDevice.ToolTipName}"
            >
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Devices" ItemsSource="{Binding LogiDevices, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DeviceName">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="IsCheckable" Value="True"/>
                                <Setter Property="StaysOpenOnClick" Value="False"/>
                                <EventSetter Event="Click" Handler="DeviceSelect_OnClick"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="Poll Interval" ItemsSource="{Binding PollIntervals, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayName">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="IsCheckable" Value="True"/>
                                <Setter Property="StaysOpenOnClick" Value="False"/>
                                <EventSetter Event="Click" Handler="PollIntervalSelect_OnClick"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="Exit" Click="ExitButton_OnClick"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</Window>
